name: Go Continuous Delivery Pipeline

on:
  workflow_run:
    workflows: ["Go Development Pipeline"]
    types:
      - completed
    branches:
      - master

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEV_GITHUB_ACTION_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REPOSITORY }}

      - name: Build and Push Docker Image to ECR
        run: |
          docker build -t ${{ secrets.AWS_ECR_REPOSITORY }}:latest -f dockerfile.aws .
          docker push ${{ secrets.AWS_ECR_REPOSITORY }}:latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        env:
          AWS_ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        with:
          host: ${{ secrets.EC2_HOST_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: AWS_ECR_REPOSITORY
          script: |
            set -e
            cd /opt/app/ButakeroMusicBotGo
            git pull
            # Autenticarse en ECR
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ECR_REPOSITORY
            docker-compose -f production-docker-compose.yml down
            docker-compose -f production-docker-compose.yml pull
            docker-compose -f production-docker-compose.yml up -d --build
